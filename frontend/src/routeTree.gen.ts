// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SessionsImport } from './routes/sessions'
import { Route as LoginImport } from './routes/login'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as SessionsNewImport } from './routes/sessions_.new'
import { Route as AuthProfileImport } from './routes/_auth.profile'
import { Route as SessionsRunSessionIdImport } from './routes/sessions_.run.$sessionId'
import { Route as SessionsAnalysisSessionIdImport } from './routes/sessions_.analysis.$sessionId'

// Create/Update Routes

const SessionsRoute = SessionsImport.update({
  path: '/sessions',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SessionsNewRoute = SessionsNewImport.update({
  path: '/sessions/new',
  getParentRoute: () => rootRoute,
} as any)

const AuthProfileRoute = AuthProfileImport.update({
  path: '/profile',
  getParentRoute: () => AuthRoute,
} as any)

const SessionsRunSessionIdRoute = SessionsRunSessionIdImport.update({
  path: '/sessions/run/$sessionId',
  getParentRoute: () => rootRoute,
} as any)

const SessionsAnalysisSessionIdRoute = SessionsAnalysisSessionIdImport.update({
  path: '/sessions/analysis/$sessionId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/sessions': {
      preLoaderRoute: typeof SessionsImport
      parentRoute: typeof rootRoute
    }
    '/_auth/profile': {
      preLoaderRoute: typeof AuthProfileImport
      parentRoute: typeof AuthImport
    }
    '/sessions/new': {
      preLoaderRoute: typeof SessionsNewImport
      parentRoute: typeof rootRoute
    }
    '/sessions/analysis/$sessionId': {
      preLoaderRoute: typeof SessionsAnalysisSessionIdImport
      parentRoute: typeof rootRoute
    }
    '/sessions/run/$sessionId': {
      preLoaderRoute: typeof SessionsRunSessionIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AuthRoute.addChildren([AuthProfileRoute]),
  LoginRoute,
  SessionsRoute,
  SessionsNewRoute,
  SessionsAnalysisSessionIdRoute,
  SessionsRunSessionIdRoute,
])
